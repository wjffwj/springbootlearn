@SpringBootApplication
//说明是springboot应用
public class HelloWorldApp {
    public static void main(String[] args) {
        SpringApplication.run(HelloWorldApp.class, args);//spring应用启动起来
    }
}


@SpringBootApplication: SpringBoot应用标注在某个类上说明这个类是SpringBoot的主配置类，SpringBoot的主程序用它修饰

--------------------------------------------------------------------------------------------
@Target({ElementType.TYPE})
@Retention(RetentionPolicy.RUNTIME)
@Documented
@Inherited
@SpringBootConfiguration
@EnableAutoConfiguration
@ComponentScan(
    excludeFilters = {@Filter(
    type = FilterType.CUSTOM,
    classes = {TypeExcludeFilter.class}
), @Filter(
    type = FilterType.CUSTOM,
    classes = {AutoConfigurationExcludeFilter.class}
)}
)
public @interface SpringBootApplication

    @SpringBootConfiguration：SpringBoot配置类
    @Configuration：配置类上标注此注解            配置类----配置文件   配置类也是容器中的一个组件@Component
    @EnableAutoConfiguration ：开启自动配置        以前需要人配置的，现在springboot帮我们自动配置
    @AutoConfigurationPackage ：自动配置包  把主配置类所在包及子包的所有组件扫描到容器中
    @Import({Registrar.class})：spring底层注解  ，给容器中导入一个组件


EnableAutoConfigurationImportSelector：
    导入哪些组件的选择器
    将所有需要导入的组件以全类名的方式返回；这些组件就会被添加到容器中；
    会给容器中导入非常多的自动配置类；给容器中导入这个场景需要的所有组件，并配置好这些组件。

    loadFactoryNames方法：springboot啓動時从spring.factories中获取EbableAutoConfiguration指定的值，将值作为自动配置类导入到容器中

以前自己配置的东西，都被自动配置类自动配置了
javaEE一揽子都在这个包中 spring-boot-autoconfigure-1.5.9.RELEASE.jar